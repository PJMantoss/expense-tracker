{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","src","alt","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAEaA,EAAS,WAClB,OACI,gD,qBCJO,WAACC,EAAOC,GACnB,OAAOA,EAAOC,MACV,IAAK,qBACD,sBACOF,EADP,CAEIG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAEzF,IAAK,kBACD,sBACOP,EADP,CAEIG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAEhD,QACI,OAAOH,ICTbQ,EAAe,CACjBL,aAAe,IAINM,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBC,qBAAWC,EAAYN,GADL,mBACrCR,EADqC,KAC9Be,EAD8B,KAkB5C,OACI,kBAACN,EAAcO,SAAf,CAAwBC,MAAO,CAC3Bd,aAAcH,EAAMG,aACpBe,kBAjBkB,SAAAZ,GACtBS,EAAS,CACLb,KAAM,qBACNK,QAASD,KAeTa,eAXe,SAAAd,GACnBU,EAAS,CACLb,KAAM,kBACNK,QAASF,OAURO,ICjCAQ,EAAU,WAAO,IAIpBC,EAHmBC,qBAAWb,GAA5BN,aAEqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UACtCC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAEtE,OACI,oCACI,4CACA,gCAAMP,KCTLQ,EAAiB,WAAO,IAG3BC,EAFmBR,qBAAWb,GAA5BN,aAEqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UAEtDO,EAASD,EACV1B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAEPI,IAAuF,EAA5EF,EAAQ1B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAASC,QAAQ,GAExG,OACI,yBAAKK,UAAU,qBACX,6BACI,sCACA,uBAAGA,UAAU,cAAcF,IAG/B,6BACI,wCACA,uBAAGE,UAAU,eAAeD,MCrB/BE,EAAc,SAAC,GAAmB,IAAlB7B,EAAiB,EAAjBA,YACjBa,EAAsBI,qBAAWb,GAAjCS,kBAEFiB,EAAO9B,EAAYmB,OAAS,EAAI,IAAM,IAE5C,OACI,6BACI,wBAAIS,UAAW5B,EAAYmB,OAAS,EAAI,QAAU,QAC5CnB,EAAY+B,KADlB,IACwB,8BAAOD,EAAP,IAAcE,KAAKC,IAAIjC,EAAYmB,SAAe,4BACrEe,QAAS,kBAAMrB,EAAkBb,EAAYC,KAAK2B,UAAU,cADS,QCPzEO,EAAkB,WAAO,IAC1BrC,EAAiBmB,qBAAWb,GAA5BN,aAER,OACI,6BACI,uCACA,wBAAI8B,UAAU,QAEN9B,EAAaoB,KAAI,SAAAlB,GAAW,OAAK,kBAAC,EAAD,CAAaoC,IAAKpC,EAAYC,GAAID,YAAaA,UCTvFqC,EAAiB,WAAO,IAAD,EACRC,mBAAS,IADD,mBACzBP,EADyB,KACnBQ,EADmB,OAEJD,mBAAS,GAFL,mBAEzBnB,EAFyB,KAEjBqB,EAFiB,KAIxB1B,EAAmBG,qBAAWb,GAA9BU,eAeR,OACI,6BACI,mDACA,0BAAM2B,SAhBG,SAAAC,GACbA,EAAEC,iBAEF,IAAMC,EAAiB,CACnB3C,GAAI+B,KAAKa,MAAsB,IAAhBb,KAAKc,UACpBf,OACAZ,QAASA,GAGbL,EAAe8B,KAQP,yBAAKhB,UAAU,gBACX,2BAAOmB,QAAQ,QAAf,QACA,2BAAOlD,KAAK,OAAOe,MAAOmB,EAAMiB,SAAU,SAACN,GAAD,OAAOH,EAAQG,EAAEO,OAAOrC,QAAQsC,YAAY,mBAG1F,yBAAKtB,UAAU,gBACX,2BAAOmB,QAAQ,UAAf,UACW,6BADX,2CAIA,2BAAOlD,KAAK,SAASe,MAAOO,EAAQ6B,SAAU,SAACN,GAAD,OAAOF,EAAUE,EAAEO,OAAOrC,WAG5E,4BAAQgB,UAAU,OAAlB,sB,MCXDuB,MAnBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKvB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAK3B,GAAG,QACJ,2CACA,yBAAKmD,IAAI,iDAAiDC,IAAI,SAC9D,oCAAS,uBAAGC,KAAK,+BAA+BL,OAAO,SAASM,IAAI,uBAA3D,eChBnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.308ab4c9.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h1>\n            Expense Tracker\n        </h1>\n    )\n}\n","export default (state, action) => {\n    switch(action.type){\n        case 'DELETE_TRANSACTION':\n            return{\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return{\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n//Initial state\nconst initialState = {\n    transactions : []\n}\n\n//Create context\nexport const GlobalContext = createContext(initialState);\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    //Actions\n    const deleteTransaction = id => {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        })\n    }\n\n    const addTransaction = transaction => {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            deleteTransaction,\n            addTransaction \n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Balance = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1>${total}</h1>\n        </>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const IncomeExpenses = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const income = amounts\n        .filter(item => item > 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n\n    const expense = (amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1).toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"money plus\">{income}</p>\n            </div>\n\n            <div>\n                <h4>Expenses</h4>\n                <p className=\"money minus\">{expense}</p>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Transaction = ({transaction}) => {\n    const { deleteTransaction } = useContext(GlobalContext);\n\n    const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n    return (\n        <div>\n            <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n                 {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span><button \n                 onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n            </li>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { Transaction } from './Transaction';\n\nexport const TransactionList = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    return (\n        <div>\n            <h3>History</h3>\n            <ul className=\"list\">\n                {\n                    transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))\n                }\n            </ul>\n        </div>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    const { addTransaction } = useContext(GlobalContext);\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const newTransaction = {\n            id: Math.floor(Math.random() * 100000000),\n            text,\n            amount: +amount\n        }\n\n        addTransaction(newTransaction);\n    }\n\n\n    return (\n        <div>\n            <h3>Add New Transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\"/>\n                </div>\n\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\">\n                        Amount <br/>\n                        (negative - expense, positive - income)\n                    </label>\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} />\n                </div>\n\n                <button className=\"btn\">Add Transaction</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList/>\n        <AddTransaction/>\n      </div>\n      <div id=\"love\">\n          <span>Made With</span>\n          <img src=\"https://img.icons8.com/dusk/64/000000/like.png\" alt=\"love\"/> \n          <span>by <a href=\"https://github.com/PJMantoss\" target=\"_blank\" rel=\"noopener noreferrer\">Mantoss</a></span>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}